<?php

/**
 * Implements hook_menu
 */
function loan_statistics_menu()
{
  $items['statistics'] = array(
    'title' => '',
    'page callback' => 'loan_statistics_page',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * hook_menu() callback
 *
 * @return string
 */
function loan_statistics_page()
{
  loan_statistics_insert_issued_loan();
}


function loan_statistics_insert_issued_loan() {
  $issued_loans = physical_entity_form_statement_get_issued_loans();
  $loan_statistics = array();

  if (!empty($issued_loans)) {
    foreach ($issued_loans as $loan) {
      $issue_date = date('Y-m-d', strtotime($loan->field_issue_date['und'][0]['value']));
      $loan_statistics[$issue_date] = 0;
    }
    foreach ($issued_loans as $loan) {
      $issue_date = date('Y-m-d', strtotime($loan->field_issue_date['und'][0]['value']));
      $loan_statistics[$issue_date] += 1;
    }
  }

  foreach ($loan_statistics as $date_key => $statistic) {
    $node = new stdClass();
    $node->type = 'loan_statistics';
    $node->title = 'Loan Statistics';
    node_object_prepare($node);

    $node->language = LANGUAGE_NONE;

    $node->field_issue_date[$node->language] = array(
      0 => array('value' => $date_key)
    );

    $node->field_issued_loans[$node->language] = array(
      0 => array('value' => $statistic)
    );

    $node = node_submit($node);
    node_save($node);
  }

}

/**
 * Get Physical Entity by nid
 *
 * @param $nid
 * @return array|bool|mixed
 */
function loan_statistics_create_get_loan_statistics_by_nid($nid)
{
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'loan_statistics')
    ->propertyCondition('nid', $nid);

  $result = $query->execute();

  $loan_statistics = array();

  if (isset($result['node'])) {
    $loan_statistics_ids = array_keys($result['node']);
    $loan_statistics = node_load($loan_statistics_ids[0]);
  }

  return $loan_statistics;
}
