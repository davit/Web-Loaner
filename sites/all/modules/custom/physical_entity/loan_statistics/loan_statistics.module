<?php

/**
 * Implements hook_menu
 */
function loan_statistics_menu()
{
    $items['statistics/update'] = array(
        'title' => '',
        'page callback' => 'loan_statistics_page',
        'access callback' => TRUE,
    );

    return $items;
}

/**
 * hook_menu() callback
 *
 * @return string
 */
function loan_statistics_page()
{
    loan_statistics_insert_issued_loan();
}


function loan_statistics_insert_issued_loan() {
    $issued_loans_today = physical_entity_form_statement_get_issued_loans_by_date(date('Y-m-d'));

//    print_r($issued_loans_today); exit;

    $issue_date = '';
    $issued_loans = 0;
    $total_amount_issued = 0;

    foreach ($issued_loans_today as $loan) {
        $issue_date = $loan->field_issue_date['und'][0]['value'];
        $currency = $loan->field_currency['und'][0]['value'];

        if ($currency != 'GEL') {
            $currency_id = exchange_rate_get_currency_by_name($currency)->nid;
            $exchange_rate_obj = exchange_rate_get_rate_by_currency_and_date($currency_id, $issue_date);
            $exchange_rate = $exchange_rate_obj->field_rate['und'][0]['value'];
            $total_amount_issued += $loan->field_principal_amount['und'][0]['value'] * $exchange_rate;
        }else {
            $total_amount_issued += $loan->field_principal_amount['und'][0]['value'];
        }

    }

    $node = new stdClass();
    $node->type = 'loan_statistics';
    $node->title = 'Loan Statistics';
    node_object_prepare($node);

    $node->language = LANGUAGE_NONE;

    $node->field_issue_date[$node->language] = array(
        0 => array('value' => $issue_date)
    );

    $node->field_issued_loans[$node->language] = array(
        0 => array('value' => count($issued_loans_today))
    );

    $node->field_total_amount_issued[$node->language] = array(
        0 => array('value' => $total_amount_issued)
    );

    $node = node_submit($node);
    node_save($node);

}

function loan_statistics_crone() {

}

/**
 * Get Physical Entity by nid
 *
 * @param $nid
 * @return array|bool|mixed
 */
function loan_statistics_create_get_loan_statistics_by_nid($nid)
{
    $query = new EntityFieldQuery();

    $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'loan_statistics')
        ->propertyCondition('nid', $nid);

    $result = $query->execute();

    $loan_statistics = array();

    if (isset($result['node'])) {
        $loan_statistics_ids = array_keys($result['node']);
        $loan_statistics = node_load($loan_statistics_ids[0]);
    }

    return $loan_statistics;
}
